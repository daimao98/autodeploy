(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{369:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"其他问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他问题"}},[s._v("#")]),s._v(" 其他问题")]),s._v(" "),a("h2",{attrs:{id:"docker重启但容器不重启"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker重启但容器不重启"}},[s._v("#")]),s._v(" docker重启但容器不重启")]),s._v(" "),a("p",[s._v("在默认情况下，当 docker daemon 停止时，正在运行的容器也会跟着停止。")]),s._v(" "),a("p",[s._v("在新版本的 docker 中（ > 1.12.6），可以启用 "),a("code",[s._v("live-restore")]),s._v(" 选项，让容器保持运行状态。")]),s._v(" "),a("p",[s._v("进入 "),a("code",[s._v("/etc/docker/daemon.json")]),s._v(" ，添加 "),a("code",[s._v('"live-restore": true')])]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"live-restore"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("然后进入 "),a("code",[s._v("/usr/lib/systemd/system/docker.service")]),s._v("，添加如下代码：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kill only the docker process, not all processes in the cgroup")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KillMode")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("process\n")])])]),a("p",[s._v("最后重载一下 docker daemon")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("在 docker 1.12.6 版本后，"),a("code",[s._v("KillMode")]),s._v(" 一般默认都是设置为 process。所以只需要添加 "),a("code",[s._v("live-restore")]),s._v("即可。但为了保险，仍需要检查一下 KillMode 的状态")])]),s._v(" "),a("p",[s._v("具体可见"),a("a",{attrs:{href:"https://docs.docker.com/config/containers/live-restore/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方详情"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"docker服务重启后容器启动失败"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker服务重启后容器启动失败"}},[s._v("#")]),s._v(" docker服务重启后容器启动失败")]),s._v(" "),a("p",[s._v("如果没有添加以上的代码，在docker服务重启后，容器启动可能会失败")]),s._v(" "),a("p",[s._v("使用该命令重启容器")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该方法会重启所有的容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -aq "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -I "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" docker start "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该方法可单独重启某个容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" 容器id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -I "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" docker start "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"修改部署网址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改部署网址"}},[s._v("#")]),s._v(" 修改部署网址")]),s._v(" "),a("p",[s._v("如果在开发过程中，想重新修改部署网址，则可以进入 "),a("code",[s._v("Jenkinsfile")]),s._v(" 文件中进行修改")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Jenkinsfile")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'==============Start Build=========='")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /home/nginx/conf\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"30a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" nginx.conf\nsed -i "')]),s._v("30a"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('   }"')]),s._v(" nginx.conf\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"30a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v('"proxy_pass    http://172.17.16.17:'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" nginx.conf\nsed -i "')]),s._v("30a"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('location / {"')]),s._v(" nginx.conf\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"30a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v('"server_name  projectname.bluej.cn'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" nginx.conf   # 在此处可修改部署后的域名\nsed -i "')]),s._v("30a"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('listen 80;"')]),s._v(" nginx.conf\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"30a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v('"server'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" nginx.conf\nsed -i "')]),s._v("30a"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('  "')]),s._v(" nginx.conf\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'==============End Build=========='")]),s._v("\n")])])]),a("h2",{attrs:{id:"部署时打包失败"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署时打包失败"}},[s._v("#")]),s._v(" 部署时打包失败")]),s._v(" "),a("p",[s._v("如果本地打包成功，但部署时却提示打包失败，一般是以下几种情况：")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("Node 版本过高，导致某些依赖包失效")])]),s._v(" "),a("p",[s._v("可以先在 "),a("code",[s._v("Dockerfile")]),s._v(" 当中，查看 docker 指定的版本")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node    \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker 以最新的node版本创建容器")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("10.x.x. \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker 以指定的node版本创建容器")]),s._v("\n")])])]),a("p",[s._v("再看报错信息的来源，查找对应依赖包所支持的 "),a("code",[s._v("node")]),s._v(" 版本，再自行选择升级 node 或是 降级 node")])]),s._v(" "),a("li",[a("p",[a("strong",[a("code",[s._v("cnpm")]),s._v(" 导致某些依赖包安装不完整")])]),s._v(" "),a("p",[s._v("尝试将 "),a("code",[s._v("dockerfile")]),s._v(" 中的以下代码进行修改，使用 npm 进行安装")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("g cnpm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("registry=https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//registry.npm.taobao.org\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" cnpm install\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除以上两行代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加这段")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install\n")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("调用某些依赖包时报错")])]),s._v(" "),a("p",[s._v("如果确定依赖包和 node 版本对应，并且切换 npm 安装仍然无法打包，可以尝试 rebuild 报错的依赖包来解决。")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node AS builder\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" package.json /app/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("registry=https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//registry.npm.taobao.org\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm rebuild node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("sass     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 假如此处是由于 node-sass 依赖包调用错误，则添加该段代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm run copy\n")])])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);